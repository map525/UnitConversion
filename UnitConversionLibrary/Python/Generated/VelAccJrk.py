#################################################################################
#2345678901234567890123456789012345678901234567890123456789012345678901234567890
#################################################################################
# PROJECT: Unit Conversion
#
# Copyright Copyright 2024 MAP
#
# Unpublished - Rights reserved under the Copyright Laws of the United States
#
#################################################################################
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#
#################################################################################
#
# File VelAccJrk.py
#
# Units for VelAccJrk
#
# Class for VelAccJrk units.
#
# Auto Generated: DO NOT Modify.
#
# Version: "1.0"
#
#################################################################################

from UnitConversion import UBASE
from UnitConversion import SingleSystem
from UnitConversion import BaseSystem

class VelAccJrk(SingleSystem.SingleSystem):

    __instance = None

    @staticmethod 
    def Instance():
        """ Static access method. """
        if VelAccJrk.__instance == None:
            VelAccJrk.__instance = VelAccJrk()
        return VelAccJrk.__instance

    def __new__(self):
       if VelAccJrk.__instance == None:
           VelAccJrk.__instance = super(VelAccJrk, self).__new__(self)

       return  VelAccJrk.__instance
    def __init__(self):
        super().__init__()
        unit = dict()

        unit.update({"SI[attometer-per-year]": UBASE.UBASE("SI", "attometer-per-year", 3.170979198376460E-26, "m/s", "L/T", "1.0")})
        unit.update({"SI[am/yr]": UBASE.UBASE("SI", "attometer-per-year", 3.170979198376460E-26, "m/s", "L/T", "1.0")})
        unit.update({"SI[attometer-per-month]": UBASE.UBASE("SI", "attometer-per-month", 3.858024691358030E-25, "m/s", "L/T", "1.0")})
        unit.update({"SI[am/mon]": UBASE.UBASE("SI", "attometer-per-month", 3.858024691358030E-25, "m/s", "L/T", "1.0")})
        unit.update({"SI[attometer-per-day]": UBASE.UBASE("SI", "attometer-per-day", 1.157407407407410E-23, "m/s", "L/T", "1.0")})
        unit.update({"SI[am/day]": UBASE.UBASE("SI", "attometer-per-day", 1.157407407407410E-23, "m/s", "L/T", "1.0")})
        unit.update({"SI[attometer-per-hour]": UBASE.UBASE("SI", "attometer-per-hour", 2.777777777777780E-22, "m/s", "L/T", "1.0")})
        unit.update({"SI[am/hr]": UBASE.UBASE("SI", "attometer-per-hour", 2.777777777777780E-22, "m/s", "L/T", "1.0")})
        unit.update({"SI[attometer-per-minute]": UBASE.UBASE("SI", "attometer-per-minute", 1.666666666666670E-20, "m/s", "L/T", "1.0")})
        unit.update({"SI[am/min]": UBASE.UBASE("SI", "attometer-per-minute", 1.666666666666670E-20, "m/s", "L/T", "1.0")})
        unit.update({"SI[attometer-per-second]": UBASE.UBASE("SI", "attometer-per-second", 1.000000000000000E-18, "m/s", "L/T", "1.0")})
        unit.update({"SI[am/sec]": UBASE.UBASE("SI", "attometer-per-second", 1.000000000000000E-18, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[benz]": UBASE.UBASE("Scientific", "benz", 1.000000000000000E+00, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[Bz]": UBASE.UBASE("Scientific", "benz", 1.000000000000000E+00, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[m/sec]": UBASE.UBASE("Scientific", "benz", 1.000000000000000E+00, "m/s", "L/T", "1.0")})
        unit.update({"INT[bubnoff-unit]": UBASE.UBASE("INT", "bubnoff-unit", 3.168808781402890E-14, "m/s", "L/T", "1.0")})
        unit.update({"INT[B]": UBASE.UBASE("INT", "bubnoff-unit", 3.168808781402890E-14, "m/s", "L/T", "1.0")})
        unit.update({"INT[BU]": UBASE.UBASE("INT", "bubnoff-unit", 3.168808781402890E-14, "m/s", "L/T", "1.0")})
        unit.update({"SI[centimeter-per-year]": UBASE.UBASE("SI", "centimeter-per-year", 3.170979198376460E-10, "m/s", "L/T", "1.0")})
        unit.update({"SI[cm/yr]": UBASE.UBASE("SI", "centimeter-per-year", 3.170979198376460E-10, "m/s", "L/T", "1.0")})
        unit.update({"SI[centimeter-per-month]": UBASE.UBASE("SI", "centimeter-per-month", 3.858024691358020E-09, "m/s", "L/T", "1.0")})
        unit.update({"SI[cm/mon]": UBASE.UBASE("SI", "centimeter-per-month", 3.858024691358020E-09, "m/s", "L/T", "1.0")})
        unit.update({"SI[centimeter-per-day]": UBASE.UBASE("SI", "centimeter-per-day", 1.157407407407410E-07, "m/s", "L/T", "1.0")})
        unit.update({"SI[cm/day]": UBASE.UBASE("SI", "centimeter-per-day", 1.157407407407410E-07, "m/s", "L/T", "1.0")})
        unit.update({"SI[centimeter-per-hour]": UBASE.UBASE("SI", "centimeter-per-hour", 2.777777777777780E-06, "m/s", "L/T", "1.0")})
        unit.update({"SI[cm/hr]": UBASE.UBASE("SI", "centimeter-per-hour", 2.777777777777780E-06, "m/s", "L/T", "1.0")})
        unit.update({"SI[centimeter-per-minute]": UBASE.UBASE("SI", "centimeter-per-minute", 1.666666666666670E-04, "m/s", "L/T", "1.0")})
        unit.update({"SI[cm/min]": UBASE.UBASE("SI", "centimeter-per-minute", 1.666666666666670E-04, "m/s", "L/T", "1.0")})
        unit.update({"cgs[centimeter-per-second]": UBASE.UBASE("cgs", "centimeter-per-second", 1.000000000000000E-02, "m/s", "L/T", "1.0")})
        unit.update({"cgs[cm/sec]": UBASE.UBASE("cgs", "centimeter-per-second", 1.000000000000000E-02, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[chain-per-year]": UBASE.UBASE("Imperial", "chain-per-year", 6.378995433789950E-07, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[ch/yr]": UBASE.UBASE("Imperial", "chain-per-year", 6.378995433789950E-07, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[chain-per-month]": UBASE.UBASE("Imperial", "chain-per-month", 7.761111111111110E-06, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[ch/mon]": UBASE.UBASE("Imperial", "chain-per-month", 7.761111111111110E-06, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[chain-per-day]": UBASE.UBASE("Imperial", "chain-per-day", 2.328333333333330E-04, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[ch/day]": UBASE.UBASE("Imperial", "chain-per-day", 2.328333333333330E-04, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[chain-per-hour]": UBASE.UBASE("Imperial", "chain-per-hour", 5.588000000000000E-03, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[ch/hr]": UBASE.UBASE("Imperial", "chain-per-hour", 5.588000000000000E-03, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[chain-per-minute]": UBASE.UBASE("Imperial", "chain-per-minute", 3.352800000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[ch/min]": UBASE.UBASE("Imperial", "chain-per-minute", 3.352800000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[chain-per-second]": UBASE.UBASE("Imperial", "chain-per-second", 2.011680000000000E+01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[ch/sec]": UBASE.UBASE("Imperial", "chain-per-second", 2.011680000000000E+01, "m/s", "L/T", "1.0")})
        unit.update({"UK[cusec]": UBASE.UBASE("UK", "cusec", 2.831684659200000E-02, "m/s", "L/T", "1.0")})
        unit.update({"SI[decameter-per-year]": UBASE.UBASE("SI", "decameter-per-year", 3.170979198376460E-07, "m/s", "L/T", "1.0")})
        unit.update({"SI[dam/yr]": UBASE.UBASE("SI", "decameter-per-year", 3.170979198376460E-07, "m/s", "L/T", "1.0")})
        unit.update({"SI[decameter-per-month]": UBASE.UBASE("SI", "decameter-per-month", 3.858024691358020E-06, "m/s", "L/T", "1.0")})
        unit.update({"SI[dam/mon]": UBASE.UBASE("SI", "decameter-per-month", 3.858024691358020E-06, "m/s", "L/T", "1.0")})
        unit.update({"SI[decameter-per-day]": UBASE.UBASE("SI", "decameter-per-day", 1.157407407407410E-04, "m/s", "L/T", "1.0")})
        unit.update({"SI[dam/day]": UBASE.UBASE("SI", "decameter-per-day", 1.157407407407410E-04, "m/s", "L/T", "1.0")})
        unit.update({"SI[decameter-per-hour]": UBASE.UBASE("SI", "decameter-per-hour", 2.777777777777780E-03, "m/s", "L/T", "1.0")})
        unit.update({"SI[dam/hr]": UBASE.UBASE("SI", "decameter-per-hour", 2.777777777777780E-03, "m/s", "L/T", "1.0")})
        unit.update({"SI[decameter-per-minute]": UBASE.UBASE("SI", "decameter-per-minute", 1.666666666666670E-01, "m/s", "L/T", "1.0")})
        unit.update({"SI[dam/min]": UBASE.UBASE("SI", "decameter-per-minute", 1.666666666666670E-01, "m/s", "L/T", "1.0")})
        unit.update({"SI[decameter-per-second]": UBASE.UBASE("SI", "decameter-per-second", 1.000000000000000E+01, "m/s", "L/T", "1.0")})
        unit.update({"SI[dam/sec]": UBASE.UBASE("SI", "decameter-per-second", 1.000000000000000E+01, "m/s", "L/T", "1.0")})
        unit.update({"SI[decimeter-per-year]": UBASE.UBASE("SI", "decimeter-per-year", 3.170979198376460E-09, "m/s", "L/T", "1.0")})
        unit.update({"SI[dm/yr]": UBASE.UBASE("SI", "decimeter-per-year", 3.170979198376460E-09, "m/s", "L/T", "1.0")})
        unit.update({"SI[decimeter-per-month]": UBASE.UBASE("SI", "decimeter-per-month", 3.858024691358020E-08, "m/s", "L/T", "1.0")})
        unit.update({"SI[dm/mon]": UBASE.UBASE("SI", "decimeter-per-month", 3.858024691358020E-08, "m/s", "L/T", "1.0")})
        unit.update({"SI[decimeter-per-day]": UBASE.UBASE("SI", "decimeter-per-day", 1.157407407407410E-06, "m/s", "L/T", "1.0")})
        unit.update({"SI[dm/day]": UBASE.UBASE("SI", "decimeter-per-day", 1.157407407407410E-06, "m/s", "L/T", "1.0")})
        unit.update({"SI[decimeter-per-hour]": UBASE.UBASE("SI", "decimeter-per-hour", 2.777777777777780E-05, "m/s", "L/T", "1.0")})
        unit.update({"SI[dm/hr]": UBASE.UBASE("SI", "decimeter-per-hour", 2.777777777777780E-05, "m/s", "L/T", "1.0")})
        unit.update({"SI[decimeter0per-minute]": UBASE.UBASE("SI", "decimeter0per-minute", 1.666666666666670E-03, "m/s", "L/T", "1.0")})
        unit.update({"SI[dm/min]": UBASE.UBASE("SI", "decimeter0per-minute", 1.666666666666670E-03, "m/s", "L/T", "1.0")})
        unit.update({"SI[decimeter-per-second]": UBASE.UBASE("SI", "decimeter-per-second", 1.000000000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"SI[dm/sec]": UBASE.UBASE("SI", "decimeter-per-second", 1.000000000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"SI[femtometer-per-year]": UBASE.UBASE("SI", "femtometer-per-year", 3.170979198376460E-23, "m/s", "L/T", "1.0")})
        unit.update({"SI[fm/yr]": UBASE.UBASE("SI", "femtometer-per-year", 3.170979198376460E-23, "m/s", "L/T", "1.0")})
        unit.update({"SI[femtometer-per-month]": UBASE.UBASE("SI", "femtometer-per-month", 3.858024691358030E-22, "m/s", "L/T", "1.0")})
        unit.update({"SI[fm/mon]": UBASE.UBASE("SI", "femtometer-per-month", 3.858024691358030E-22, "m/s", "L/T", "1.0")})
        unit.update({"SI[femtometer-per-day]": UBASE.UBASE("SI", "femtometer-per-day", 1.157407407407410E-20, "m/s", "L/T", "1.0")})
        unit.update({"SI[fm/day]": UBASE.UBASE("SI", "femtometer-per-day", 1.157407407407410E-20, "m/s", "L/T", "1.0")})
        unit.update({"SI[femtometer-per-hour]": UBASE.UBASE("SI", "femtometer-per-hour", 2.777777777777780E-19, "m/s", "L/T", "1.0")})
        unit.update({"SI[fm/hr]": UBASE.UBASE("SI", "femtometer-per-hour", 2.777777777777780E-19, "m/s", "L/T", "1.0")})
        unit.update({"SI[femtometer-per-minute]": UBASE.UBASE("SI", "femtometer-per-minute", 2.777777777777780E-19, "m/s", "L/T", "1.0")})
        unit.update({"SI[fm/min]": UBASE.UBASE("SI", "femtometer-per-minute", 2.777777777777780E-19, "m/s", "L/T", "1.0")})
        unit.update({"SI[femtometer-per-second]": UBASE.UBASE("SI", "femtometer-per-second", 1.000000000000000E-15, "m/s", "L/T", "1.0")})
        unit.update({"SI[fm/sec]": UBASE.UBASE("SI", "femtometer-per-second", 1.000000000000000E-15, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[foot-per-year]": UBASE.UBASE("Imperial", "foot-per-year", 9.665144596651450E-09, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[ft/yr]": UBASE.UBASE("Imperial", "foot-per-year", 9.665144596651450E-09, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[fpy]": UBASE.UBASE("Imperial", "foot-per-year", 9.665144596651450E-09, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[foot-per-month]": UBASE.UBASE("Imperial", "foot-per-month", 1.175925925925930E-07, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[ft/mon]": UBASE.UBASE("Imperial", "foot-per-month", 1.175925925925930E-07, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[foot-per-day]": UBASE.UBASE("Imperial", "foot-per-day", 3.527777777777780E-06, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[ft/day]": UBASE.UBASE("Imperial", "foot-per-day", 3.527777777777780E-06, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[fpd]": UBASE.UBASE("Imperial", "foot-per-day", 3.527777777777780E-06, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[foot-per-hour]": UBASE.UBASE("Imperial", "foot-per-hour", 8.466666666666670E-05, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[ft/hr]": UBASE.UBASE("Imperial", "foot-per-hour", 8.466666666666670E-05, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[fph]": UBASE.UBASE("Imperial", "foot-per-hour", 8.466666666666670E-05, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[foot-per-minute]": UBASE.UBASE("Imperial", "foot-per-minute", 5.080000000000000E-03, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[ft/min]": UBASE.UBASE("Imperial", "foot-per-minute", 5.080000000000000E-03, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[fpm]": UBASE.UBASE("Imperial", "foot-per-minute", 5.080000000000000E-03, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[foot-per-second]": UBASE.UBASE("Imperial", "foot-per-second", 3.048000000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[ft/sec]": UBASE.UBASE("Imperial", "foot-per-second", 3.048000000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[fps]": UBASE.UBASE("Imperial", "foot-per-second", 3.048000000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"FPS[foot-per-second]": UBASE.UBASE("FPS", "foot-per-second", 3.048000000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"FPS[ft/sec]": UBASE.UBASE("FPS", "foot-per-second", 3.048000000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"FPS[fps]": UBASE.UBASE("FPS", "foot-per-second", 3.048000000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[furlong-per-year]": UBASE.UBASE("Imperial", "furlong-per-year", 6.378995433789950E-06, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[fur/yy]": UBASE.UBASE("Imperial", "furlong-per-year", 6.378995433789950E-06, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[furlong-per-month]": UBASE.UBASE("Imperial", "furlong-per-month", 7.761111111111110E-05, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[fur/mon]": UBASE.UBASE("Imperial", "furlong-per-month", 7.761111111111110E-05, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[furlong-per-day]": UBASE.UBASE("Imperial", "furlong-per-day", 2.328333333333330E-03, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[fur/day]": UBASE.UBASE("Imperial", "furlong-per-day", 2.328333333333330E-03, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[furlong-per-hour]": UBASE.UBASE("Imperial", "furlong-per-hour", 5.588000000000000E-02, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[fur/hr]": UBASE.UBASE("Imperial", "furlong-per-hour", 5.588000000000000E-02, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[furlong-per-minute]": UBASE.UBASE("Imperial", "furlong-per-minute", 3.352800000000000E+00, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[fur/min]": UBASE.UBASE("Imperial", "furlong-per-minute", 3.352800000000000E+00, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[furlong-per-second]": UBASE.UBASE("Imperial", "furlong-per-second", 2.011680000000000E+02, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[fur/sec]": UBASE.UBASE("Imperial", "furlong-per-second", 2.011680000000000E+02, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[hand-per-second]": UBASE.UBASE("Imperial", "hand-per-second", 1.016000000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[hd/sec]": UBASE.UBASE("Imperial", "hand-per-second", 1.016000000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[hand-per-minute]": UBASE.UBASE("Imperial", "hand-per-minute", 1.693333333333330E-03, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[hd/min]": UBASE.UBASE("Imperial", "hand-per-minute", 1.693333333333330E-03, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[hand-per-hour]": UBASE.UBASE("Imperial", "hand-per-hour", 2.822222222222220E-05, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[hd/hr]": UBASE.UBASE("Imperial", "hand-per-hour", 2.822222222222220E-05, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[hand-per-day]": UBASE.UBASE("Imperial", "hand-per-day", 1.175925925925930E-06, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[hd/day]": UBASE.UBASE("Imperial", "hand-per-day", 1.175925925925930E-06, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[hand-per-month]": UBASE.UBASE("Imperial", "hand-per-month", 3.919753086419750E-08, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[hd/mon]": UBASE.UBASE("Imperial", "hand-per-month", 3.919753086419750E-08, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[hand-per-year]": UBASE.UBASE("Imperial", "hand-per-year", 3.221714865550480E-09, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[hd/yr]": UBASE.UBASE("Imperial", "hand-per-year", 3.221714865550480E-09, "m/s", "L/T", "1.0")})
        unit.update({"SI[hectometer-per-year]": UBASE.UBASE("SI", "hectometer-per-year", 3.170979198376460E-06, "m/s", "L/T", "1.0")})
        unit.update({"SI[hm/yr]": UBASE.UBASE("SI", "hectometer-per-year", 3.170979198376460E-06, "m/s", "L/T", "1.0")})
        unit.update({"SI[hectometer-per-month]": UBASE.UBASE("SI", "hectometer-per-month", 3.858024691358020E-05, "m/s", "L/T", "1.0")})
        unit.update({"SI[hm/mon]": UBASE.UBASE("SI", "hectometer-per-month", 3.858024691358020E-05, "m/s", "L/T", "1.0")})
        unit.update({"SI[hectometer-per-day]": UBASE.UBASE("SI", "hectometer-per-day", 1.157407407407410E-03, "m/s", "L/T", "1.0")})
        unit.update({"SI[hm/day]": UBASE.UBASE("SI", "hectometer-per-day", 1.157407407407410E-03, "m/s", "L/T", "1.0")})
        unit.update({"SI[hectometer-per-hour]": UBASE.UBASE("SI", "hectometer-per-hour", 2.777777777777780E-02, "m/s", "L/T", "1.0")})
        unit.update({"SI[hm/hr]": UBASE.UBASE("SI", "hectometer-per-hour", 2.777777777777780E-02, "m/s", "L/T", "1.0")})
        unit.update({"SI[hectometer-per-minute]": UBASE.UBASE("SI", "hectometer-per-minute", 1.666666666666670E+00, "m/s", "L/T", "1.0")})
        unit.update({"SI[hm/min]": UBASE.UBASE("SI", "hectometer-per-minute", 1.666666666666670E+00, "m/s", "L/T", "1.0")})
        unit.update({"SI[hectometer-per-second]": UBASE.UBASE("SI", "hectometer-per-second", 1.000000000000000E+02, "m/s", "L/T", "1.0")})
        unit.update({"SI[hm/sec]": UBASE.UBASE("SI", "hectometer-per-second", 1.000000000000000E+02, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[inch-per-second]": UBASE.UBASE("Imperial", "inch-per-second", 2.540000000000000E-02, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[in/sec]": UBASE.UBASE("Imperial", "inch-per-second", 2.540000000000000E-02, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[ips]": UBASE.UBASE("Imperial", "inch-per-second", 2.540000000000000E-02, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[inch-per-minute]": UBASE.UBASE("Imperial", "inch-per-minute", 4.233333333333330E-04, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[in/min]": UBASE.UBASE("Imperial", "inch-per-minute", 4.233333333333330E-04, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[inch-per-hour]": UBASE.UBASE("Imperial", "inch-per-hour", 7.055555555555560E-06, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[in/hr]": UBASE.UBASE("Imperial", "inch-per-hour", 7.055555555555560E-06, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[inch-per-day]": UBASE.UBASE("Imperial", "inch-per-day", 2.939814814814810E-07, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[in/day]": UBASE.UBASE("Imperial", "inch-per-day", 2.939814814814810E-07, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[inch-per-month]": UBASE.UBASE("Imperial", "inch-per-month", 9.799382716049380E-09, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[in/mon]": UBASE.UBASE("Imperial", "inch-per-month", 9.799382716049380E-09, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[inch-per-year]": UBASE.UBASE("Imperial", "inch-per-year", 8.054287163876210E-10, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[in/yr]": UBASE.UBASE("Imperial", "inch-per-year", 8.054287163876210E-10, "m/s", "L/T", "1.0")})
        unit.update({"SI[kilometer-per-year]": UBASE.UBASE("SI", "kilometer-per-year", 3.170979198376460E-05, "m/s", "L/T", "1.0")})
        unit.update({"SI[km/yr]": UBASE.UBASE("SI", "kilometer-per-year", 3.170979198376460E-05, "m/s", "L/T", "1.0")})
        unit.update({"SI[kilometer-per-month]": UBASE.UBASE("SI", "kilometer-per-month", 1.157407407407410E-02, "m/s", "L/T", "1.0")})
        unit.update({"SI[km/mon]": UBASE.UBASE("SI", "kilometer-per-month", 1.157407407407410E-02, "m/s", "L/T", "1.0")})
        unit.update({"SI[kilometer-per-day]": UBASE.UBASE("SI", "kilometer-per-day", 3.858024691358020E-04, "m/s", "L/T", "1.0")})
        unit.update({"SI[km/day]": UBASE.UBASE("SI", "kilometer-per-day", 3.858024691358020E-04, "m/s", "L/T", "1.0")})
        unit.update({"SI[kilometer-per-hour]": UBASE.UBASE("SI", "kilometer-per-hour", 2.777777777777780E-01, "m/s", "L/T", "1.0")})
        unit.update({"SI[km/hr]": UBASE.UBASE("SI", "kilometer-per-hour", 2.777777777777780E-01, "m/s", "L/T", "1.0")})
        unit.update({"SI[kilometer-per-minute]": UBASE.UBASE("SI", "kilometer-per-minute", 1.666666666666670E+01, "m/s", "L/T", "1.0")})
        unit.update({"SI[km/min]": UBASE.UBASE("SI", "kilometer-per-minute", 1.666666666666670E+01, "m/s", "L/T", "1.0")})
        unit.update({"SI[kilometer-per-second]": UBASE.UBASE("SI", "kilometer-per-second", 1.000000000000000E+03, "m/s", "L/T", "1.0")})
        unit.update({"SI[km/sec]": UBASE.UBASE("SI", "kilometer-per-second", 1.000000000000000E+03, "m/s", "L/T", "1.0")})
        unit.update({"cgs[kine]": UBASE.UBASE("cgs", "kine", 1.000000000000000E-02, "m/s", "L/T", "1.0")})
        unit.update({"UK[knot]": UBASE.UBASE("UK", "knot", 5.147733333333330E-01, "m/s", "L/T", "1.0")})
        unit.update({"UK[kn]": UBASE.UBASE("UK", "knot", 5.147733333333330E-01, "m/s", "L/T", "1.0")})
        unit.update({"US[knot]": UBASE.UBASE("US", "knot", 5.147733333333330E-01, "m/s", "L/T", "1.0")})
        unit.update({"US[kn]": UBASE.UBASE("US", "knot", 5.147733333333330E-01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[knot]": UBASE.UBASE("Imperial", "knot", 5.147733333333330E-01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[kn]": UBASE.UBASE("Imperial", "knot", 5.147733333333330E-01, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[kyne]": UBASE.UBASE("Scientific", "kyne", 1.000000000000000E-02, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[cm/s]": UBASE.UBASE("Scientific", "kyne", 1.000000000000000E-02, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[league-per-year]": UBASE.UBASE("Imperial", "league-per-year", 1.530958904109590E-04, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[leag/yr]": UBASE.UBASE("Imperial", "league-per-year", 1.530958904109590E-04, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[league-per-month]": UBASE.UBASE("Imperial", "league-per-month", 1.862666666666670E-03, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[leag/mon]": UBASE.UBASE("Imperial", "league-per-month", 1.862666666666670E-03, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[league-per-day]": UBASE.UBASE("Imperial", "league-per-day", 5.588000000000000E-02, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[leag/day]": UBASE.UBASE("Imperial", "league-per-day", 5.588000000000000E-02, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[league-per-hour]": UBASE.UBASE("Imperial", "league-per-hour", 1.341120000000000E+00, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[leag/hr]": UBASE.UBASE("Imperial", "league-per-hour", 1.341120000000000E+00, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[league-per-minute]": UBASE.UBASE("Imperial", "league-per-minute", 8.046720000000000E+01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[leag/min]": UBASE.UBASE("Imperial", "league-per-minute", 8.046720000000000E+01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[league-per-second]": UBASE.UBASE("Imperial", "league-per-second", 4.828032000000000E+03, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[leag/sec]": UBASE.UBASE("Imperial", "league-per-second", 4.828032000000000E+03, "m/s", "L/T", "1.0")})
        unit.update({"INT[mach]": UBASE.UBASE("INT", "mach", 3.426036485503330E+02, "m/s", "L/T", "1.0")})
        unit.update({"INT[M]": UBASE.UBASE("INT", "mach", 3.426036485503330E+02, "m/s", "L/T", "1.0")})
        unit.update({"INT[Ma]": UBASE.UBASE("INT", "mach", 3.426036485503330E+02, "m/s", "L/T", "1.0")})
        unit.update({"INT[Nma]": UBASE.UBASE("INT", "mach", 3.426036485503330E+02, "m/s", "L/T", "1.0")})
        unit.update({"SI[micrometer-per-second]": UBASE.UBASE("SI", "micrometer-per-second", 1.000000000000000E-06, "m/s", "L/T", "1.0")})
        unit.update({"SI[um/sec]": UBASE.UBASE("SI", "micrometer-per-second", 1.000000000000000E-06, "m/s", "L/T", "1.0")})
        unit.update({"SI[micrometer-per-minute]": UBASE.UBASE("SI", "micrometer-per-minute", 1.666666666666670E-08, "m/s", "L/T", "1.0")})
        unit.update({"SI[um/min]": UBASE.UBASE("SI", "micrometer-per-minute", 1.666666666666670E-08, "m/s", "L/T", "1.0")})
        unit.update({"SI[micrometer-per-hour]": UBASE.UBASE("SI", "micrometer-per-hour", 2.777777777777780E-10, "m/s", "L/T", "1.0")})
        unit.update({"SI[um/hr]": UBASE.UBASE("SI", "micrometer-per-hour", 2.777777777777780E-10, "m/s", "L/T", "1.0")})
        unit.update({"SI[micrometer-per-day]": UBASE.UBASE("SI", "micrometer-per-day", 1.157407407407410E-11, "m/s", "L/T", "1.0")})
        unit.update({"SI[um/day]": UBASE.UBASE("SI", "micrometer-per-day", 1.157407407407410E-11, "m/s", "L/T", "1.0")})
        unit.update({"SI[micrometer-per-month]": UBASE.UBASE("SI", "micrometer-per-month", 3.858024691358020E-13, "m/s", "L/T", "1.0")})
        unit.update({"SI[um/mon]": UBASE.UBASE("SI", "micrometer-per-month", 3.858024691358020E-13, "m/s", "L/T", "1.0")})
        unit.update({"SI[micrometer-per-year]": UBASE.UBASE("SI", "micrometer-per-year", 3.170979198376460E-14, "m/s", "L/T", "1.0")})
        unit.update({"SI[um/yr]": UBASE.UBASE("SI", "micrometer-per-year", 3.170979198376460E-14, "m/s", "L/T", "1.0")})
        unit.update({"SI[millimeter-per-second]": UBASE.UBASE("SI", "millimeter-per-second", 1.000000000000000E-03, "m/s", "L/T", "1.0")})
        unit.update({"SI[mm/sec]": UBASE.UBASE("SI", "millimeter-per-second", 1.000000000000000E-03, "m/s", "L/T", "1.0")})
        unit.update({"SI[millimeter-per-minute]": UBASE.UBASE("SI", "millimeter-per-minute", 1.666666666666670E-05, "m/s", "L/T", "1.0")})
        unit.update({"SI[mm/min]": UBASE.UBASE("SI", "millimeter-per-minute", 1.666666666666670E-05, "m/s", "L/T", "1.0")})
        unit.update({"SI[millimeter-per-hour]": UBASE.UBASE("SI", "millimeter-per-hour", 2.777777777777780E-07, "m/s", "L/T", "1.0")})
        unit.update({"SI[mm/hr]": UBASE.UBASE("SI", "millimeter-per-hour", 2.777777777777780E-07, "m/s", "L/T", "1.0")})
        unit.update({"SI[millimeter-per-day]": UBASE.UBASE("SI", "millimeter-per-day", 1.157407407407410E-08, "m/s", "L/T", "1.0")})
        unit.update({"SI[mm/day]": UBASE.UBASE("SI", "millimeter-per-day", 1.157407407407410E-08, "m/s", "L/T", "1.0")})
        unit.update({"SI[millimeter-per-month]": UBASE.UBASE("SI", "millimeter-per-month", 3.858024691358020E-10, "m/s", "L/T", "1.0")})
        unit.update({"SI[mm/mon]": UBASE.UBASE("SI", "millimeter-per-month", 3.858024691358020E-10, "m/s", "L/T", "1.0")})
        unit.update({"SI[millimeter-per-year]": UBASE.UBASE("SI", "millimeter-per-year", 3.170979198376460E-11, "m/s", "L/T", "1.0")})
        unit.update({"SI[mm/yr]": UBASE.UBASE("SI", "millimeter-per-year", 3.170979198376460E-11, "m/s", "L/T", "1.0")})
        unit.update({"SI[megameter-per-second]": UBASE.UBASE("SI", "megameter-per-second", 1.000000000000000E+06, "m/s", "L/T", "1.0")})
        unit.update({"SI[Mm/sec]": UBASE.UBASE("SI", "megameter-per-second", 1.000000000000000E+06, "m/s", "L/T", "1.0")})
        unit.update({"SI[megameter-per-minute]": UBASE.UBASE("SI", "megameter-per-minute", 1.666666666666670E+04, "m/s", "L/T", "1.0")})
        unit.update({"SI[Mm/min]": UBASE.UBASE("SI", "megameter-per-minute", 1.666666666666670E+04, "m/s", "L/T", "1.0")})
        unit.update({"SI[megameter-per-hour]": UBASE.UBASE("SI", "megameter-per-hour", 2.777777777777780E+02, "m/s", "L/T", "1.0")})
        unit.update({"SI[Mm/hr]": UBASE.UBASE("SI", "megameter-per-hour", 2.777777777777780E+02, "m/s", "L/T", "1.0")})
        unit.update({"SI[megameter-per-day]": UBASE.UBASE("SI", "megameter-per-day", 1.157407407407410E+01, "m/s", "L/T", "1.0")})
        unit.update({"SI[Mm/day]": UBASE.UBASE("SI", "megameter-per-day", 1.157407407407410E+01, "m/s", "L/T", "1.0")})
        unit.update({"SI[megameter-per-month]": UBASE.UBASE("SI", "megameter-per-month", 3.858024691358020E-01, "m/s", "L/T", "1.0")})
        unit.update({"SI[Mm/mon]": UBASE.UBASE("SI", "megameter-per-month", 3.858024691358020E-01, "m/s", "L/T", "1.0")})
        unit.update({"SI[megameter-per-year]": UBASE.UBASE("SI", "megameter-per-year", 3.170979198376460E-02, "m/s", "L/T", "1.0")})
        unit.update({"SI[Mm/yr]": UBASE.UBASE("SI", "megameter-per-year", 3.170979198376460E-02, "m/s", "L/T", "1.0")})
        unit.update({"SI[meter-per-second]": UBASE.UBASE("SI", "meter-per-second", 1.000000000000000E+00, "m/s", "L/T", "1.0")})
        unit.update({"SI[m/sec]": UBASE.UBASE("SI", "meter-per-second", 1.000000000000000E+00, "m/s", "L/T", "1.0")})
        unit.update({"SI[meter-per-minute]": UBASE.UBASE("SI", "meter-per-minute", 1.666666666666670E-02, "m/s", "L/T", "1.0")})
        unit.update({"SI[m/min]": UBASE.UBASE("SI", "meter-per-minute", 1.666666666666670E-02, "m/s", "L/T", "1.0")})
        unit.update({"SI[meter-per-hour]": UBASE.UBASE("SI", "meter-per-hour", 2.777777777777780E-04, "m/s", "L/T", "1.0")})
        unit.update({"SI[m/hr]": UBASE.UBASE("SI", "meter-per-hour", 2.777777777777780E-04, "m/s", "L/T", "1.0")})
        unit.update({"SI[meter-per-day]": UBASE.UBASE("SI", "meter-per-day", 1.157407407407410E-05, "m/s", "L/T", "1.0")})
        unit.update({"SI[m/day]": UBASE.UBASE("SI", "meter-per-day", 1.157407407407410E-05, "m/s", "L/T", "1.0")})
        unit.update({"SI[meter-per-month]": UBASE.UBASE("SI", "meter-per-month", 3.858024691358020E-07, "m/s", "L/T", "1.0")})
        unit.update({"SI[m/mon]": UBASE.UBASE("SI", "meter-per-month", 3.858024691358020E-07, "m/s", "L/T", "1.0")})
        unit.update({"SI[meter-per-year]": UBASE.UBASE("SI", "meter-per-year", 3.170979198376460E-08, "m/s", "L/T", "1.0")})
        unit.update({"SI[m/yr]": UBASE.UBASE("SI", "meter-per-year", 3.170979198376460E-08, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[mil-per-year]": UBASE.UBASE("Imperial", "mil-per-year", 8.054287163876210E-10, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[mpy]": UBASE.UBASE("Imperial", "mil-per-year", 8.054287163876210E-10, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[mile-per-second]": UBASE.UBASE("Imperial", "mile-per-second", 1.609344000000000E+03, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[mi/sec]": UBASE.UBASE("Imperial", "mile-per-second", 1.609344000000000E+03, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[mile-per-minute]": UBASE.UBASE("Imperial", "mile-per-minute", 2.682240000000000E+01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[mi/min]": UBASE.UBASE("Imperial", "mile-per-minute", 2.682240000000000E+01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[mile-per-hour]": UBASE.UBASE("Imperial", "mile-per-hour", 4.470400000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[mph]": UBASE.UBASE("Imperial", "mile-per-hour", 4.470400000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[mi/hr]": UBASE.UBASE("Imperial", "mile-per-hour", 4.470400000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[mile-per-day]": UBASE.UBASE("Imperial", "mile-per-day", 1.862666666666670E-02, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[mi/day]": UBASE.UBASE("Imperial", "mile-per-day", 1.862666666666670E-02, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[mile-per-month]": UBASE.UBASE("Imperial", "mile-per-month", 6.208888888888890E-04, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[mi/mon]": UBASE.UBASE("Imperial", "mile-per-month", 6.208888888888890E-04, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[mile-per-year]": UBASE.UBASE("Imperial", "mile-per-year", 5.103196347031960E-05, "m/s", "L/T", "1.0")})
        unit.update({"Imperial[mi/yr]": UBASE.UBASE("Imperial", "mile-per-year", 5.103196347031960E-05, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[milligram-per-square-decimeter-per-day]": UBASE.UBASE("Scientific", "milligram-per-square-decimeter-per-day", 1.157407407407410E-09, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[mg/dm2-day]": UBASE.UBASE("Scientific", "milligram-per-square-decimeter-per-day", 1.157407407407410E-09, "m/s", "L/T", "1.0")})
        unit.update({"SI[nanometer-per-second]": UBASE.UBASE("SI", "nanometer-per-second", 1.000000000000000E-09, "m/s", "L/T", "1.0")})
        unit.update({"SI[nm/sec]": UBASE.UBASE("SI", "nanometer-per-second", 1.000000000000000E-09, "m/s", "L/T", "1.0")})
        unit.update({"SI[nanometer-per-minute]": UBASE.UBASE("SI", "nanometer-per-minute", 1.666666666666670E-11, "m/s", "L/T", "1.0")})
        unit.update({"SI[nm/min]": UBASE.UBASE("SI", "nanometer-per-minute", 1.666666666666670E-11, "m/s", "L/T", "1.0")})
        unit.update({"SI[nanometer-per-hour]": UBASE.UBASE("SI", "nanometer-per-hour", 2.777777777777780E-13, "m/s", "L/T", "1.0")})
        unit.update({"SI[nm/hr]": UBASE.UBASE("SI", "nanometer-per-hour", 2.777777777777780E-13, "m/s", "L/T", "1.0")})
        unit.update({"SI[nanometer-per-day]": UBASE.UBASE("SI", "nanometer-per-day", 1.157407407407410E-14, "m/s", "L/T", "1.0")})
        unit.update({"SI[nm/day]": UBASE.UBASE("SI", "nanometer-per-day", 1.157407407407410E-14, "m/s", "L/T", "1.0")})
        unit.update({"SI[nanometer-per-month]": UBASE.UBASE("SI", "nanometer-per-month", 3.858024691358030E-16, "m/s", "L/T", "1.0")})
        unit.update({"SI[nm/mon]": UBASE.UBASE("SI", "nanometer-per-month", 3.858024691358030E-16, "m/s", "L/T", "1.0")})
        unit.update({"SI[nanometer-per-year]": UBASE.UBASE("SI", "nanometer-per-year", 3.170979198376460E-17, "m/s", "L/T", "1.0")})
        unit.update({"SI[nm/yr]": UBASE.UBASE("SI", "nanometer-per-year", 3.170979198376460E-17, "m/s", "L/T", "1.0")})
        unit.update({"INT[nautical-mile-per-hour]": UBASE.UBASE("INT", "nautical-mile-per-hour", 5.144444444444440E-01, "m/s", "L/T", "1.0")})
        unit.update({"INT[kn]": UBASE.UBASE("INT", "nautical-mile-per-hour", 5.144444444444440E-01, "m/s", "L/T", "1.0")})
        unit.update({"INT[knot]": UBASE.UBASE("INT", "nautical-mile-per-hour", 5.144444444444440E-01, "m/s", "L/T", "1.0")})
        unit.update({"INT[nmph]": UBASE.UBASE("INT", "nautical-mile-per-hour", 5.144444444444440E-01, "m/s", "L/T", "1.0")})
        unit.update({"INT[noeud]": UBASE.UBASE("INT", "noeud", 5.144444444444440E-01, "m/s", "L/T", "1.0")})
        unit.update({"SI[picometer-per-second]": UBASE.UBASE("SI", "picometer-per-second", 1.000000000000000E-12, "m/s", "L/T", "1.0")})
        unit.update({"SI[pm/sec]": UBASE.UBASE("SI", "picometer-per-second", 1.000000000000000E-12, "m/s", "L/T", "1.0")})
        unit.update({"SI[picometer-per-minute]": UBASE.UBASE("SI", "picometer-per-minute", 1.666666666666670E-14, "m/s", "L/T", "1.0")})
        unit.update({"SI[pm/min]": UBASE.UBASE("SI", "picometer-per-minute", 1.666666666666670E-14, "m/s", "L/T", "1.0")})
        unit.update({"SI[picometer-per-hour]": UBASE.UBASE("SI", "picometer-per-hour", 2.777777777777780E-16, "m/s", "L/T", "1.0")})
        unit.update({"SI[pm/hr]": UBASE.UBASE("SI", "picometer-per-hour", 2.777777777777780E-16, "m/s", "L/T", "1.0")})
        unit.update({"SI[picometer-per-day]": UBASE.UBASE("SI", "picometer-per-day", 1.157407407407410E-17, "m/s", "L/T", "1.0")})
        unit.update({"SI[pm/day]": UBASE.UBASE("SI", "picometer-per-day", 1.157407407407410E-17, "m/s", "L/T", "1.0")})
        unit.update({"SI[picometer-per-month]": UBASE.UBASE("SI", "picometer-per-month", 3.858024691358020E-19, "m/s", "L/T", "1.0")})
        unit.update({"SI[pm/mon]": UBASE.UBASE("SI", "picometer-per-month", 3.858024691358020E-19, "m/s", "L/T", "1.0")})
        unit.update({"SI[picometer-per-year]": UBASE.UBASE("SI", "picometer-per-year", 3.170979198376460E-20, "m/s", "L/T", "1.0")})
        unit.update({"SI[pm/yr]": UBASE.UBASE("SI", "picometer-per-year", 3.170979198376460E-20, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[speed-of-light]": UBASE.UBASE("Scientific", "speed-of-light", 2.997924580000000E+08, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[c]": UBASE.UBASE("Scientific", "speed-of-light", 2.997924580000000E+08, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[lightspeed]": UBASE.UBASE("Scientific", "speed-of-light", 2.997924580000000E+08, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[svedberg]": UBASE.UBASE("Scientific", "svedberg", 1.000000000000000E-15, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[Sv]": UBASE.UBASE("Scientific", "svedberg", 1.000000000000000E-15, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[yard-per-second]": UBASE.UBASE("Scientific", "yard-per-second", 9.144000000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[yd/sec]": UBASE.UBASE("Scientific", "yard-per-second", 9.144000000000000E-01, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[yard-per-minute]": UBASE.UBASE("Scientific", "yard-per-minute", 1.524000000000000E-02, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[yd/min]": UBASE.UBASE("Scientific", "yard-per-minute", 1.524000000000000E-02, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[yard-per-hour]": UBASE.UBASE("Scientific", "yard-per-hour", 2.540000000000000E-04, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[yd/hr]": UBASE.UBASE("Scientific", "yard-per-hour", 2.540000000000000E-04, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[yard-per-day]": UBASE.UBASE("Scientific", "yard-per-day", 1.058333333333330E-05, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[yd/day]": UBASE.UBASE("Scientific", "yard-per-day", 1.058333333333330E-05, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[yard-per-month]": UBASE.UBASE("Scientific", "yard-per-month", 3.527777777777780E-07, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[yd/mon]": UBASE.UBASE("Scientific", "yard-per-month", 3.527777777777780E-07, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[yard-per-year]": UBASE.UBASE("Scientific", "yard-per-year", 2.899543378995430E-08, "m/s", "L/T", "1.0")})
        unit.update({"Scientific[yd/yr]": UBASE.UBASE("Scientific", "yard-per-year", 2.899543378995430E-08, "m/s", "L/T", "1.0")})
        unit.update({"SI[yoctometer-per-second]": UBASE.UBASE("SI", "yoctometer-per-second", 1.000000000000000E-24, "m/s", "L/T", "1.0")})
        unit.update({"SI[ym/sec]": UBASE.UBASE("SI", "yoctometer-per-second", 1.000000000000000E-24, "m/s", "L/T", "1.0")})
        unit.update({"SI[yoctometer-per-minute]": UBASE.UBASE("SI", "yoctometer-per-minute", 1.666666666666670E-26, "m/s", "L/T", "1.0")})
        unit.update({"SI[ym/min]": UBASE.UBASE("SI", "yoctometer-per-minute", 1.666666666666670E-26, "m/s", "L/T", "1.0")})
        unit.update({"SI[yoctometer-per-hour]": UBASE.UBASE("SI", "yoctometer-per-hour", 2.777777777777780E-28, "m/s", "L/T", "1.0")})
        unit.update({"SI[ym/hr]": UBASE.UBASE("SI", "yoctometer-per-hour", 2.777777777777780E-28, "m/s", "L/T", "1.0")})
        unit.update({"SI[yoctometer-per-day]": UBASE.UBASE("SI", "yoctometer-per-day", 1.157407407407410E-29, "m/s", "L/T", "1.0")})
        unit.update({"SI[ym/day]": UBASE.UBASE("SI", "yoctometer-per-day", 1.157407407407410E-29, "m/s", "L/T", "1.0")})
        unit.update({"SI[yoctometer-per-month]": UBASE.UBASE("SI", "yoctometer-per-month", 3.858024691358020E-31, "m/s", "L/T", "1.0")})
        unit.update({"SI[ym/mon]": UBASE.UBASE("SI", "yoctometer-per-month", 3.858024691358020E-31, "m/s", "L/T", "1.0")})
        unit.update({"SI[yoctometer-per-year]": UBASE.UBASE("SI", "yoctometer-per-year", 3.170979198376460E-32, "m/s", "L/T", "1.0")})
        unit.update({"SI[ym/yr]": UBASE.UBASE("SI", "yoctometer-per-year", 3.170979198376460E-32, "m/s", "L/T", "1.0")})
        unit.update({"SI[whizz]": UBASE.UBASE("SI", "whizz", 3.335640951981520E-09, "m/s", "L/T", "1.0")})
        unit.update({"SI[zeptometer-per-second]": UBASE.UBASE("SI", "zeptometer-per-second", 1.000000000000000E-21, "m/s", "L/T", "1.0")})
        unit.update({"SI[zm/sec]": UBASE.UBASE("SI", "zeptometer-per-second", 1.000000000000000E-21, "m/s", "L/T", "1.0")})
        unit.update({"SI[zeptometer-per-minute]": UBASE.UBASE("SI", "zeptometer-per-minute", 1.666666666666670E-23, "m/s", "L/T", "1.0")})
        unit.update({"SI[zm/min]": UBASE.UBASE("SI", "zeptometer-per-minute", 1.666666666666670E-23, "m/s", "L/T", "1.0")})
        unit.update({"SI[zeptometer-per-hour]": UBASE.UBASE("SI", "zeptometer-per-hour", 2.777777777777780E-25, "m/s", "L/T", "1.0")})
        unit.update({"SI[zm/hr]": UBASE.UBASE("SI", "zeptometer-per-hour", 2.777777777777780E-25, "m/s", "L/T", "1.0")})
        unit.update({"SI[zeptometer-per-day]": UBASE.UBASE("SI", "zeptometer-per-day", 1.157407407407410E-26, "m/s", "L/T", "1.0")})
        unit.update({"SI[zm/day]": UBASE.UBASE("SI", "zeptometer-per-day", 1.157407407407410E-26, "m/s", "L/T", "1.0")})
        unit.update({"SI[zeptometer-per-month]": UBASE.UBASE("SI", "zeptometer-per-month", 3.858024691358020E-28, "m/s", "L/T", "1.0")})
        unit.update({"SI[zm/mon]": UBASE.UBASE("SI", "zeptometer-per-month", 3.858024691358020E-28, "m/s", "L/T", "1.0")})
        unit.update({"SI[zeptometer-per-year]": UBASE.UBASE("SI", "zeptometer-per-year", 3.170979198376460E-29, "m/s", "L/T", "1.0")})
        unit.update({"SI[zm/yr]": UBASE.UBASE("SI", "zeptometer-per-year", 3.170979198376460E-29, "m/s", "L/T", "1.0")})
        self._map.update({"velocity": BaseSystem.BaseSystem("velocity", unit, "1.0")})

        unit.clear()


        unit.update({"cgs[galileo]": UBASE.UBASE("cgs", "galileo", 1.000000000000000E-02, "m/s2", "L/T2", "1.0")})
        unit.update({"cgs[Gal]": UBASE.UBASE("cgs", "galileo", 1.000000000000000E-02, "m/s2", "L/T2", "1.0")})
        unit.update({"cgs[gal]": UBASE.UBASE("cgs", "galileo", 1.000000000000000E-02, "m/s2", "L/T2", "1.0")})
        unit.update({"FPS[celo]": UBASE.UBASE("FPS", "celo", 3.048000000000000E-01, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[inch-per-square-second]": UBASE.UBASE("Imperial", "inch-per-square-second", 2.540000000000000E-02, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[in/sec2]": UBASE.UBASE("Imperial", "inch-per-square-second", 2.540000000000000E-02, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[hand-per-square-second]": UBASE.UBASE("Imperial", "hand-per-square-second", 1.016000000000000E-01, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[hd/sec2]": UBASE.UBASE("Imperial", "hand-per-square-second", 1.016000000000000E-01, "m/s2", "L/T2", "1.0")})
        unit.update({"FPS[foot-per-square-second]": UBASE.UBASE("FPS", "foot-per-square-second", 3.048000000000000E-01, "m/s2", "L/T2", "1.0")})
        unit.update({"FPS[ft/sec2]": UBASE.UBASE("FPS", "foot-per-square-second", 3.048000000000000E-01, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[foot-per-square-second]": UBASE.UBASE("Imperial", "foot-per-square-second", 3.048000000000000E-01, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[ft/sec2]": UBASE.UBASE("Imperial", "foot-per-square-second", 3.048000000000000E-01, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[yard-per-square-second]": UBASE.UBASE("Imperial", "yard-per-square-second", 9.144000000000000E-01, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[yd/sec2]": UBASE.UBASE("Imperial", "yard-per-square-second", 9.144000000000000E-01, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[chain-per-square-second]": UBASE.UBASE("Imperial", "chain-per-square-second", 2.011680000000000E+01, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[ch/sec2]": UBASE.UBASE("Imperial", "chain-per-square-second", 2.011680000000000E+01, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[furlong-per-square-second]": UBASE.UBASE("Imperial", "furlong-per-square-second", 2.011680000000000E+02, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[fur/sec2]": UBASE.UBASE("Imperial", "furlong-per-square-second", 2.011680000000000E+02, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[mile-per-square-second]": UBASE.UBASE("Imperial", "mile-per-square-second", 1.609344000000000E+03, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[mi/sec2]": UBASE.UBASE("Imperial", "mile-per-square-second", 1.609344000000000E+03, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[league-per-square-second]": UBASE.UBASE("Imperial", "league-per-square-second", 4.828032000000000E+03, "m/s2", "L/T2", "1.0")})
        unit.update({"Imperial[lea/sec2]": UBASE.UBASE("Imperial", "league-per-square-second", 4.828032000000000E+03, "m/s2", "L/T2", "1.0")})
        unit.update({"INT[gee]": UBASE.UBASE("INT", "gee", 9.806650000000000E+00, "m/s2", "L/T2", "1.0")})
        unit.update({"INT[g]": UBASE.UBASE("INT", "gee", 9.806650000000000E+00, "m/s2", "L/T2", "1.0")})
        unit.update({"Scientific[leo]": UBASE.UBASE("Scientific", "leo", 1.000000000000000E+01, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[yoctometer-per-square-second]": UBASE.UBASE("SI", "yoctometer-per-square-second", 1.000000000000000E-24, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[ym/sec2]": UBASE.UBASE("SI", "yoctometer-per-square-second", 1.000000000000000E-24, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[zeptometer-per-square-second]": UBASE.UBASE("SI", "zeptometer-per-square-second", 1.000000000000000E-21, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[zm/sec2]": UBASE.UBASE("SI", "zeptometer-per-square-second", 1.000000000000000E-21, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[attometer-per-square-second]": UBASE.UBASE("SI", "attometer-per-square-second", 1.000000000000000E-18, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[am/sec2]": UBASE.UBASE("SI", "attometer-per-square-second", 1.000000000000000E-18, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[femtometer-per-square-second]": UBASE.UBASE("SI", "femtometer-per-square-second", 1.000000000000000E-15, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[fm/sec2]": UBASE.UBASE("SI", "femtometer-per-square-second", 1.000000000000000E-15, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[picometer-per-square-second]": UBASE.UBASE("SI", "picometer-per-square-second", 1.000000000000000E-12, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[pm/sec2]": UBASE.UBASE("SI", "picometer-per-square-second", 1.000000000000000E-12, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[nanometer-per-square-second]": UBASE.UBASE("SI", "nanometer-per-square-second", 1.000000000000000E-09, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[nm/sec2]": UBASE.UBASE("SI", "nanometer-per-square-second", 1.000000000000000E-09, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[micrometer-per-square-second]": UBASE.UBASE("SI", "micrometer-per-square-second", 1.000000000000000E-06, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[um/sec2]": UBASE.UBASE("SI", "micrometer-per-square-second", 1.000000000000000E-06, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[millimeter-per-square-second]": UBASE.UBASE("SI", "millimeter-per-square-second", 1.000000000000000E-03, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[mm/sec2]": UBASE.UBASE("SI", "millimeter-per-square-second", 1.000000000000000E-03, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[centimeter-per-square-second]": UBASE.UBASE("SI", "centimeter-per-square-second", 1.000000000000000E-02, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[cm/sec2]": UBASE.UBASE("SI", "centimeter-per-square-second", 1.000000000000000E-02, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[decimeter-per-square-second]": UBASE.UBASE("SI", "decimeter-per-square-second", 1.000000000000000E-01, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[dm/sec2]": UBASE.UBASE("SI", "decimeter-per-square-second", 1.000000000000000E-01, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[meter-per-square-second]": UBASE.UBASE("SI", "meter-per-square-second", 1.000000000000000E+00, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[m/sec2]": UBASE.UBASE("SI", "meter-per-square-second", 1.000000000000000E+00, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[decameter-per-square-second]": UBASE.UBASE("SI", "decameter-per-square-second", 1.000000000000000E+01, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[dam/sec2]": UBASE.UBASE("SI", "decameter-per-square-second", 1.000000000000000E+01, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[hectometer-per-square-second]": UBASE.UBASE("SI", "hectometer-per-square-second", 1.000000000000000E+02, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[hm/sec2]": UBASE.UBASE("SI", "hectometer-per-square-second", 1.000000000000000E+02, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[kilometer-per-square-second]": UBASE.UBASE("SI", "kilometer-per-square-second", 1.000000000000000E+03, "m/s2", "L/T2", "1.0")})
        unit.update({"SI[km/sec2]": UBASE.UBASE("SI", "kilometer-per-square-second", 1.000000000000000E+03, "m/s2", "L/T2", "1.0")})
        unit.update({"INT[normal-acceleration]": UBASE.UBASE("INT", "normal-acceleration", 9.806650000000000E+00, "m/s2", "L/T2", "1.0")})
        unit.update({"INT[gn]": UBASE.UBASE("INT", "normal-acceleration", 9.806650000000000E+00, "m/s2", "L/T2", "1.0")})
        self._map.update({"acceleration": BaseSystem.BaseSystem("acceleration", unit, "1.0")})

        unit.clear()


        unit.update({"cgs[jerk]": UBASE.UBASE("cgs", "jerk", 1.000000000000000E-02, "m/s3", "L/T3", "1.0")})
        unit.update({"cgs[J]": UBASE.UBASE("cgs", "jerk", 1.000000000000000E-02, "m/s3", "L/T3", "1.0")})
        unit.update({"cgs[jolt]": UBASE.UBASE("cgs", "jolt", 1.000000000000000E-02, "m/s3", "L/T3", "1.0")})
        unit.update({"cgs[j]": UBASE.UBASE("cgs", "jolt", 1.000000000000000E-02, "m/s3", "L/T3", "1.0")})
        unit.update({"SI[jerk]": UBASE.UBASE("SI", "jerk", 1.000000000000000E+00, "m/s3", "L/T3", "1.0")})
        unit.update({"SI[J]": UBASE.UBASE("SI", "jerk", 1.000000000000000E+00, "m/s3", "L/T3", "1.0")})
        unit.update({"SI[jolt]": UBASE.UBASE("SI", "jolt", 1.000000000000000E+00, "m/s3", "L/T3", "1.0")})
        unit.update({"SI[j]": UBASE.UBASE("SI", "jolt", 1.000000000000000E+00, "m/s3", "L/T3", "1.0")})
        unit.update({"Imperial[jerk]": UBASE.UBASE("Imperial", "jerk", 3.048000000000000E-01, "m/s3", "L/T3", "1.0")})
        unit.update({"Imperial[J]": UBASE.UBASE("Imperial", "jerk", 3.048000000000000E-01, "m/s3", "L/T3", "1.0")})
        unit.update({"Imperial[jolt]": UBASE.UBASE("Imperial", "jolt", 3.048000000000000E-01, "m/s3", "L/T3", "1.0")})
        unit.update({"Imperial[j]": UBASE.UBASE("Imperial", "jolt", 3.048000000000000E-01, "m/s3", "L/T3", "1.0")})
        self._map.update({"jerk": BaseSystem.BaseSystem("jerk", unit, "1.0")})

        unit.clear()


 #EOF
